Option Explicit

'#VBA100本ノック 6本目
'画像のようにA1から始まる表があります｡
'D列にB列×C列の計算式を入れてください。
'ただし商品コードに"-"の枝番が付いている場合は計算式を入れずそのままにしてください。
'例.D2にはB2×C2の計算式を入れる。D4:D5には計算式を入れない。

Sub VBAknock_006()

    Dim myrange As Range
    Dim i As Integer
    
    For i = 2 To 11
        Set myrange = Range("A" & i - 1 & ":A11").Find(what:="*-*", LookIn:=xlValues)
        If Cells(i, 1).Value <> myrange.Value Then
            Cells(i, 4).Value = Cells(i, 2).Value * Cells(i, 3).Value
        End If
    Next
    
    set myrange = nothing

End Sub

'解答例:
'Dim i As Long
'For i = 2 To Cells(Rows.Count, 1).End(xlUp).Row
'    If Not Cells(i, 1).Value Like "*-*" Then
'        Cells(i, 4).FormulaR1C1 = "=RC[-2]*RC[-1]"
'    End If
'Next
'
'最下行が非表示ではないことが前提になります｡
'
'Like演算子はInstr関数を使っても良いです｡
'If InStr(Cells(i, 1), "-") = 0 Then
'Like演算子､Instr関数､R1C1参照については記事の補足にて｡
'また､Unionメソッドを使って一括で相対参照で入れるコードも掲載しておきました｡
'
'補足
'この問題の場合､R1C1形式を使わないとかなり面倒な処理になります｡
'範囲全てに同一数式を入れてしまって良ければ､相対参照で一括で数式を入れられます｡
'
'Dim rng As Range
'Set rng = Range("A1").CurrentRegion
'Set rng = Intersect(rng, rng.Offset(1, 3))
'rng = "=B2*C2"
'
'これは相対参照になっているので､実際に入るセルによって参照するセルが勝手にずれてくれます｡
'しかし､個別の行に数式をいれるとなると､その行からみた参照で数式を入れなければなりません｡
'このような場合は､R1C1で数式を作成すると､どの行にも同一の数式を入れることができます｡
'R1C1参照の数式は､FormulaやValueにも入れることができますが､可読性の観点からもFormulaR1C1プロパティを使った方が良いと思います｡
'
'また､Unionメソッドを使って対象セルをRangeオブジェクトに入れればA1形式の相対参照でも一括で入れられます｡
'
'Dim i As Long, rng As Range
'For i = 2 To Cells(Rows.Count, 1).End(xlUp).Row
'    If InStr(Cells(i, 1).Value, "-") = 0 Then
'        If rng Is Nothing Then
'            Set rng = Cells(i, 4)
'        Else
'            Set rng = Union(rng, Cells(i, 4))
'        End If
'    End If
'Next
'If Not rng Is Nothing Then
'    rng.Formula = Replace("=B2*C2", 2, rng.Row)
'End If
'
'これはシートで飛び飛びのセルを選択して､数式を一括入力している操作になります｡
'
'Like演算子
'文字列比較のための便利なパターン文字列式を､
'ワイルドカード､文字リスト､文字範囲などを組み合わせて指定できます｡
'
'パターン文字列式 (ワイルドカード､文字リスト､文字範囲)
'文字パターン 引数stringの中の一致する文字
'Print 任意の1文字
'*   任意の数の文字
'#   任意の1文字の数字(0-9) 1バイト(半角)の数字
'半角全角どちらのの数字にも一致します
'[charlist] 文字リストcharlistに指定した文字の中の任意の1文字
'[!charlist] 文字リストcharlistに指定した文字以外の任意の1文字
'
'1 文字とは
'2バイト文字(全角文字)も1文字と数えて文字列比較を行います。
'特殊文字の指定
'特殊文字の左角かっこ([)、疑問符(?)、数値記号(#)、およびアスタリスク(*)を文字列比較するには、
'これらの文字を角かっこで囲み、[*]のように指定します。
'文字リスト
'ハイフン (-) を使用して範囲の上限と下限を分離することで、charlistで文字の範囲を指定できます。
'たとえば､
'[A-Z] では､string内の対応する文字位置にAからZの範囲内の大文字が含まれる場合に一致します｡
'
'Instr関数
'文字列の中から指定した文字列を検索し､最初に見つかった文字位置を返す文字列処理関数です｡
'
'InStr([start, ]string1, string2[, compare])
'
'Start 省略可能です｡
'検索の開始位置を表す数式を指定します｡
'省略すると、先頭の文字から検索されます。引数 start に Null 値が含まれている場合、エラーが発生します。
'引数 compare を指定した場合は、start も指定する必要があります。
'string1 必ず指定します｡
'検索対象となる文字列式を指定します｡
'string2 必ず指定します｡
'引数 string1 内で検索する文字列式を指定します。
'compare 省略可能です｡文字列比較の比較モードを指定する番号を設定します｡
'引数 compare が Null 値の場合は、エラーが発生します。
'引数 compare を指定した場合は、引数 start も指定する必要があります。
'引数 compare を省略すると、Option Compare ステートメントの設定に応じて、比較モードが決まります。
'ローカル固有の比較ルールを使用するには、有効なLCID (LocaleID) を指定します。
'
'R1C1参照
'セルの相対位置､つまり､計算式を設定しようとしているセルからの移動量を､
'行位置をRに続けて記述し､列位置をCに続けて記述します｡
'
'R ・・・ Rの後に何も記述しない場合は同一行
'C ・・・ Cの後に何も記述しない場合は同一列
'R1 ・・・ Rの後に数値のみ記述した場合はその絶対行数
'C1 ・・・ Cの後に数値のみ記述した場合はその絶対列数
'R[1]・・・ Rに続けて[数値]とした場合は、数値行数分、行位置をずらした行
'C[1]・・・ Cに続けて[数値]とした場合は、数値列数分、列位置をずらした列

